generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Message {
  messageId     Int      @id @default(autoincrement())
  msgObjetId    Int
  receiverId    Int
  writer        String   @db.VarChar(31)
  comment       String?  @db.VarChar(255)
  commonVoice   String   @db.VarChar(255)
  personalVoice String   @db.VarChar(255)
  MsgObjet      MsgObjet @relation(fields: [msgObjetId], references: [msgObjetId], onDelete: Cascade, map: "message_msgobjet_msgobjetid_fk")
  User          User     @relation(fields: [receiverId], references: [ownerId], onDelete: NoAction, onUpdate: NoAction, map: "message_user_ownerid_fk")
}

model MsgObjet {
  msgObjetId Int       @id @default(autoincrement())
  objetId    Int
  top        Int?
  left       Int?
  Objet      Objet     @relation(fields: [objetId], references: [objetId], onDelete: NoAction, onUpdate: NoAction, map: "msgobjet_objet_objetid_fk")
  Message    Message[]
}

model Objet {
  objetId  Int        @id @default(autoincrement())
  objetUrl String     @db.VarChar(255)
  MsgObjet MsgObjet[]
}

model User {
  ownerId     Int       @id @default(autoincrement())
  name        String    @db.VarChar(31)
  userId      String    @unique @db.VarChar(31)
  password    String    @db.VarChar(31)
  allVoiceUrl String?   @db.VarChar(255)
  cnt         Int       @default(0)
  Message     Message[]
}
